# -*- coding: utf-8 -*-
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, KeyboardButton, ReplyKeyboardMarkup
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram import Bot, Dispatcher, executor, types
from aiogram.dispatcher import FSMContext
from aiogram.contrib.fsm_storage.memory import MemoryStorage
import config
import menu
import sqlite3
import statess
import random
import requests
from datetime import datetime, timedelta, date
from pyqiwip2p import QiwiP2P
import time
import asyncio
import logging

bot = Bot(config.API_Casino, parse_mode='HTML')
workerbot = Bot(config.API_Worker, parse_mode='HTML')
dp = Dispatcher(bot,storage=MemoryStorage())
logging.basicConfig(level=logging.INFO)
bd = 'data/database.db'

print('–ö–∞–∑–∏–Ω–æ –±–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω [+]')

@dp.message_handler(commands="start", state='*')
async def start(message: types.Message):
    ref_id = message.get_args()
    with sqlite3.connect(bd) as c:
        check = c.execute("SELECT id FROM mamonts_casino WHERE id = ?", (message.from_user.id,)).fetchone()
    if check is None:
        with sqlite3.connect(bd) as c:
            ref = c.execute("SELECT id FROM workers WHERE ref_code = ?", (ref_id,)).fetchone()
        if ref is None:
            await message.answer('<b>üîí –ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω!</b>\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥:')
            await statess.code.q1.set()
        else:
            with sqlite3.connect(bd) as c:
                c.execute('INSERT INTO mamonts_casino VALUES(?,?,?,?,?,?,?,?,?,?,?)',(message.from_user.id, '0', ref_id, '0', '0', '100', message.from_user.first_name, message.from_user.username, '0', '0', '0'))
            await workerbot.send_message(ref[0], f"<b><i>üéâ–£ –≤–∞—Å –Ω–æ–≤—ã–π ü¶£ –º–∞–º–æ–Ω—Ç! @{message.from_user.username}</i></b>")
            await message.answer(f'''üéâ –ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.full_name}!</b>
<b>–ü–æ–ª–∏—Ç–∏–∫–∞ –∏ —É—Å–ª–æ–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã–º –±–æ—Ç–æ–º üëá</b>

<code>1. –ò–≥—Ä–∞—è —É –Ω–∞—Å, –≤—ã –±–µ—Ä—ë—Ç–µ –≤—Å–µ —Ä–∏—Å–∫–∏ –∑–∞ —Å–≤–æ–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞ —Å–µ–±—è.
2. –ü—Ä–∏–Ω–∏–º–∞—è –ø—Ä–∞–≤–∏–ª–∞, –í—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ —Å–≤–æ—ë —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–∏–µ!
3. –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–±–∞–Ω–µ–Ω –≤ –ø–æ–¥–æ–∑—Ä–µ–Ω–∏–∏ –Ω–∞ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ/–æ–±–º–∞–Ω –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º—ã!
4. –ú—É–ª—å—Ç–∏–∞–∫–∫–∞—É–Ω—Ç—ã –∑–∞–ø—Ä–µ—â–µ–Ω—ã!
5. –°–∫—Ä–∏–ø—Ç—ã, —Å—Ö–µ–º—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∑–∞–ø—Ä–µ—â–µ–Ω–æ!
6. –ï—Å–ª–∏ –±—É–¥—É—Ç –≤—ã—è–≤–ª–µ–Ω—ã –≤—ã—à–µ–ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã–µ —Å–ª—É—á–∞–∏, –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—É–¥–µ—Ç –∑–∞–º–æ—Ä–æ–∂–µ–Ω –¥–æ –≤—ã—è—Å–Ω–µ–Ω–∏—è –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤!
7. –í —Å–ª—É—á–∞–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –∏–º–µ–µ—Ç –ø—Ä–∞–≤–æ –∑–∞–ø—Ä–æ—Å–∏—Ç—å —É –í–∞—Å –¥–æ–∫—É–º–µ–Ω—Ç—ã, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏–µ –í–∞—à—É –ª–∏—á–Ω–æ—Å—Ç—å –∏ –í–∞—à–µ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–∏–µ.
8. –í—ã –∏–≥—Ä–∞–µ—Ç–µ –Ω–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –º–æ–Ω–µ—Ç—ã, –ø–æ–∫—É–ø–∞—è –∏—Ö –∑–∞ –Ω–∞—Å—Ç–æ—è—â–∏–µ –¥–µ–Ω—å–≥–∏. –õ—é–±–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–æ—Ç–∞ —è–≤–ª—è–µ—Ç—Å—è –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ–º!</code>

<b>‚ùáÔ∏è –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∏ —É–¥–∞—á–∏ –≤ –∏–≥—Ä–µ!</b>''', reply_markup=menu.mainkb)
    else:
        await message.answer('<b>–í—ã –ø–æ–ø–∞–ª–∏ –≤ –º–µ–Ω—é –±–æ—Ç–∞ üìã</b>', reply_markup=menu.mainkb)

@dp.message_handler(state=statess.code.q1)
async def spammers(message: types.Message,state:FSMContext):
    with sqlite3.connect(bd) as c:
        ref = c.execute("SELECT id FROM workers WHERE ref_code = ?", (message.text,)).fetchone()
    if ref != None:
        with sqlite3.connect(bd) as c:
            c.execute('INSERT INTO mamonts_casino VALUES(?,?,?,?,?,?,?,?,?,?,?)',(message.from_user.id, '0', message.text, '0', '0', '100', message.from_user.first_name, message.from_user.username, '0', '0', '0'))
        await workerbot.send_message(ref[0], f"<b><i>üéâ–£ –≤–∞—Å –Ω–æ–≤—ã–π ü¶£ –º–∞–º–æ–Ω—Ç! @{message.from_user.username}</i></b>")
        await message.answer(f'''üéâ –ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.full_name}!</b>
<b>–ü–æ–ª–∏—Ç–∏–∫–∞ –∏ —É—Å–ª–æ–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã–º –±–æ—Ç–æ–º üëá</b>

<code>1. –ò–≥—Ä–∞—è —É –Ω–∞—Å, –≤—ã –±–µ—Ä—ë—Ç–µ –≤—Å–µ —Ä–∏—Å–∫–∏ –∑–∞ —Å–≤–æ–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞ —Å–µ–±—è.
2. –ü—Ä–∏–Ω–∏–º–∞—è –ø—Ä–∞–≤–∏–ª–∞, –í—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ —Å–≤–æ—ë —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–∏–µ!
3. –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–±–∞–Ω–µ–Ω –≤ –ø–æ–¥–æ–∑—Ä–µ–Ω–∏–∏ –Ω–∞ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ/–æ–±–º–∞–Ω –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º—ã!
4. –ú—É–ª—å—Ç–∏–∞–∫–∫–∞—É–Ω—Ç—ã –∑–∞–ø—Ä–µ—â–µ–Ω—ã!
5. –°–∫—Ä–∏–ø—Ç—ã, —Å—Ö–µ–º—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∑–∞–ø—Ä–µ—â–µ–Ω–æ!
6. –ï—Å–ª–∏ –±—É–¥—É—Ç –≤—ã—è–≤–ª–µ–Ω—ã –≤—ã—à–µ–ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã–µ —Å–ª—É—á–∞–∏, –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—É–¥–µ—Ç –∑–∞–º–æ—Ä–æ–∂–µ–Ω –¥–æ –≤—ã—è—Å–Ω–µ–Ω–∏—è –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤!
7. –í —Å–ª—É—á–∞–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –∏–º–µ–µ—Ç –ø—Ä–∞–≤–æ –∑–∞–ø—Ä–æ—Å–∏—Ç—å —É –í–∞—Å –¥–æ–∫—É–º–µ–Ω—Ç—ã, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏–µ –í–∞—à—É –ª–∏—á–Ω–æ—Å—Ç—å –∏ –í–∞—à–µ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–∏–µ.
8. –í—ã –∏–≥—Ä–∞–µ—Ç–µ –Ω–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –º–æ–Ω–µ—Ç—ã, –ø–æ–∫—É–ø–∞—è –∏—Ö –∑–∞ –Ω–∞—Å—Ç–æ—è—â–∏–µ –¥–µ–Ω—å–≥–∏. –õ—é–±–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–æ—Ç–∞ —è–≤–ª—è–µ—Ç—Å—è –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ–º!</code>

<b>‚ùáÔ∏è –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∏ —É–¥–∞—á–∏ –≤ –∏–≥—Ä–µ!</b>''', reply_markup=menu.mainkb)
        await state.finish()
    else:
        await message.answer('<b>üîí–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–¥ –Ω–µ–≤–µ—Ä–Ω—ã–π.</b>')

@dp.message_handler(content_types=['text'], text='üíº –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç')
async def buy(message: types.Message):
    try:
        with sqlite3.connect(bd) as c:
            info = c.execute('SELECT * FROM mamonts_casino WHERE id = ?',(message.chat.id,)).fetchone()
        await bot.send_photo(message.chat.id, photo='https://i.imgur.com/Hxp2KrG.jpg', caption=f'üìå –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç\n\nüíµ –ë–∞–ª–∞–Ω—Å: <b>{info[3]}</b>\n\nüîÜ –ò–≥—Ä —Å—ã–≥—Ä–∞–Ω–æ: <b>{info[10]}</b>\nüçÄ –ò–≥—Ä –≤—ã–∏–≥—Ä–∞–Ω–æ: <b>{info[8]}</b>\nüñ§ –ò–≥—Ä –ø—Ä–æ–∏–≥—Ä–∞–Ω–æ: <b>{info[9]}</b>',reply_markup=menu.lk)
    except:
        with sqlite3.connect(bd) as c:
            c.execute(f'DELETE FROM mamonts_casino WHERE id = {message.from_user.id}')
        await message.answer(f'–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω\n–í–≤–µ–¥–∏—Ç–µ /start')

@dp.message_handler(content_types=['text'], text='ü§µ‚Äç‚ôÇ –ü–æ–¥–¥–µ—Ä–∂–∫–∞')
async def buy(message: types.Message):
    await message.answer(f'‚ö†Ô∏è –ü–∏—à–∏—Ç–µ —Ç–æ–ª—å–∫–æ –ø–æ –¥–µ–ª—É!\n\n<a href="https://telegra.ph/Polzovatelskoe-soglashenie-01-10-2">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ.</a>', reply_markup=menu.tp)

@dp.message_handler(content_types=['text'], text='‚òòÔ∏è –ò–≥—Ä–∞—Ç—å')
async def buy(message: types.Message):
    try:
        with sqlite3.connect(bd) as c:
            info = c.execute('SELECT * FROM mamonts_casino WHERE id = ?',(message.chat.id,)).fetchone()
        if info[4] == 0:
            await message.answer('<b>–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –í–∞—Å –∏–≥—Ä—É</b>', reply_markup=menu.gamekb)
        else:
            await message.answer('–£ –≤–∞—Å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∞–∫–∫–∞—É–Ω—Ç.')
    except:
        with sqlite3.connect(bd) as c:
            c.execute(f'DELETE FROM mamonts_casino WHERE id = {message.from_user.id}')
        await message.answer(f'–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω\n–í–≤–µ–¥–∏—Ç–µ /start')

@dp.message_handler(content_types=['text'], text='–ù–∞–∑–∞–¥')
async def buy(message: types.Message):
    await message.answer('<b>üíÅüèª‚Äç –í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>', reply_markup=menu.mainkb)

@dp.callback_query_handler(text='popolnenie')
async def process_callback_button1(call: types.CallbackQuery):
    await bot.delete_message(chat_id=call.from_user.id, message_id=call.message.message_id)
    with sqlite3.connect(bd) as c:
        ref = c.execute('SELECT * FROM mamonts_casino WHERE id = ?',(call.from_user.id,)).fetchone()
        info = c.execute('SELECT * FROM workers WHERE ref_code = ?',(ref[2],)).fetchone()
    await call.message.answer(f'üíÅüèª‚Äç‚ôÄ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è\n–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è - {info[6]} ‚ÇΩ')
    await statess.Qiwi.q1.set() 

@dp.message_handler(state=statess.Qiwi.q1)
async def spammers(message: types.Message,state:FSMContext):
    if message.text.isdigit():
        with sqlite3.connect(bd) as c:
            ref = c.execute('SELECT * FROM mamonts_casino WHERE id = ?',(message.from_user.id,)).fetchone()
            info = c.execute('SELECT * FROM workers WHERE ref_code = ?',(ref[2],)).fetchone()
        if int(message.text) < info[6]:
            await message.answer(f"–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è {info[6]} ‚ÇΩ")
            await state.finish()
        else:
            await state.finish()
            try:
                price = int(message.text)
                comment = random.randint(100000, 999999)
                with sqlite3.connect(bd) as c:
                    qiwikey =  c.execute('SELECT * FROM qiwis',).fetchall()
                    c.execute('INSERT INTO pays VALUES(?,?,?,?)',(message.from_user.id, 'CasinoBot', comment, '0'))
                qiwirand = random.choice(qiwikey)
                qiwiiii = qiwirand[1]
                loh = InlineKeyboardMarkup(
                    inline_keyboard = [
                        [
                            InlineKeyboardButton(text='–ü–æ–ø–æ–ª–Ω–∏—Ç—å', callback_data=f'popolnyda,{message.from_user.id},{price},casino,{comment}')
                        ]
                    ]
                )
                p2p = QiwiP2P(auth_key=qiwiiii)
                new_bill = p2p.bill(bill_id=comment,amount=price,lifetime=45,comment=comment)
                pay_kb = types.InlineKeyboardMarkup()
                pay_kb.add(types.InlineKeyboardButton(text = '–û–ø–ª–∞—Ç–∏—Ç—å', url=new_bill.pay_url))
                pay_kb.add(types.InlineKeyboardButton(text = '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É', callback_data=f"check,{comment},{price}"))
                pay_kb.add(types.InlineKeyboardButton(text = '–û—Ç–º–µ–Ω–∏—Ç—å', callback_data="otmenilsuka"))
                timetime = date.today() + timedelta(days=7)
                await workerbot.send_message(info[0], f'–ú–∞–º–æ–Ω—Ç: {message.from_user.full_name} @{message.from_user.username}\nID: {message.from_user.id}\n—Ö–æ—á–µ—Ç –ø–æ–ø–æ–ª–Ω–∏—Ç—å {message.text} Rub', reply_markup=loh)
                await message.answer(f'<b>üìÉ –°—á–µ—Ç –∞–∫—Ç–∏–≤–µ–Ω 15 –º–∏–Ω—É—Ç...</b>\n\n‚úÖ <b>–û–ø–ª–∞—Ç–∏—Ç—å —Å—á–µ—Ç –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ üëáüëáüëá</b>\n\n\n–ë–æ—Ç –Ω–µ –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–æ —Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞ –∫–∞–∫ –≤—ã –æ–ø–ª–∞—Ç–∏—Ç–µ –ª–∏–±–æ –æ—Ç–º–µ–Ω–∏—Ç–µ –ø–ª–∞—Ç–µ–∂‚ùï‚ùï‚ùï', reply_markup=pay_kb)
                await statess.Pays.q1.set()
                async with state.proxy() as data:
                    data['secret'] = qiwiiii
            except:
                await message.answer(f'<b>–ü—Ä–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.</b>')
    else:
        await message.answer("—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ–∏—Ç –Ω–µ –∏–∑ —Ü–∏—Ñ—Ä") 
        await state.finish()

@dp.callback_query_handler(text_startswith="check", state=statess.Pays.q1) 
async def check_pay(call:types.CallbackQuery,state:FSMContext):
    data = await state.get_data()
    comment,price = call.data.split(",")[1], call.data.split(",")[2]
    qiwinah = data['secret']
    with sqlite3.connect(bd) as c:
        qiwi = c.execute('SELECT * FROM qiwis WHERE p2p_secret = ?',(qiwinah,)).fetchone()
        payed = c.execute('SELECT * FROM pays WHERE comment = ?',(comment,)).fetchone()
    check = await pays(qiwi[1],comment)
    comission = int(0.70 * int(price))
    if payed[3] == 1:
        await call.message.edit_text(f'‚úÖ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ.')
        await state.finish()
    else:
        if check:
            with sqlite3.connect(bd) as c:
                ref = c.execute('SELECT referal FROM mamonts_casino WHERE id = ?',(call.from_user.id,)).fetchone()
            for id_ref in ref:
                with sqlite3.connect(bd) as c:
                    info = c.execute('SELECT * FROM workers WHERE ref_code = ?',(id_ref,)).fetchone()
                    c.execute('UPDATE workers SET profit = profit + ? WHERE ref_code = ?',(price, id_ref,))
                    c.execute('UPDATE pays SET status = ? WHERE comment = ?',('1',comment,))
                    c.execute('UPDATE stat SET all_pay = all_pay + ?, all_profit = all_profit + ? WHERE nice = ?',('1', '1', '777',))
                await workerbot.send_message(config.LOG_CHANNEL, f'üíé <b>–£—Å–ø–µ—à–Ω–æ–µ</b> –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ (–ö–∞–∑–∏–Ω–æ)\n\nü§µüèª –í–æ—Ä–∫–µ—Ä: <b>{info[1]}</b>\n\nüè¢ –°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: <b>{price}‚ÇΩ</b>\n\nüíµ –î–æ–ª—è –≤–æ—Ä–∫–µ—Ä–∞: ~ <b>{comission} ‚ÇΩ</b>')
                await workerbot.send_message(-1001792671745, f'üíé <b>–£—Å–ø–µ—à–Ω–æ–µ</b> –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ (–ö–∞–∑–∏–Ω–æ)\n\nü§µüèª –í–æ—Ä–∫–µ—Ä: <b>{info[1]}</b>\n\nüè¢ –°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: <b>{price}‚ÇΩ</b>\n\nüíµ –î–æ–ª—è –≤–æ—Ä–∫–µ—Ä–∞: ~ <b>{comission} ‚ÇΩ</b>')
                await call.message.edit_text(f'‚úÖ –£—Å–ø–µ—à–Ω–æ! –ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ <b>{price}</b>')
                try:
                    await workerbot.send_message(info[0], f'–û—Ç–ª–∏—á–Ω–æ, –º–∞–º–æ–Ω—Ç –ø–æ–ø–æ–ª–Ω–∏–ª –Ω–∞ —Å—É–º–º—É {price}')
                except:
                    pass
                await state.finish()
        else:
            await call.message.answer("–û–ø–ª–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")

async def pays(secretka,comment):
    all_head = {"Authorization": f"Bearer {secretka}", "Accept": "application/json"}
    req = requests.get(f'https://api.qiwi.com/partner/bill/v1/bills/{comment}', headers=all_head).json()
    try:
        if req['status']['value'] == 'PAID':
            return True
        else:
            return False
    except:
        return False

@dp.callback_query_handler(text='vivod')
async def process_callback_button1(call: types.CallbackQuery):
    with sqlite3.connect(bd) as c:
        info = c.execute(f'SELECT * FROM mamonts_casino WHERE id = {call.from_user.id}').fetchone()
    if info[3] <= 1000:
        await bot.send_message(call.from_user.id, f'‚ùå –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞: 1000 ‚ÇΩ\nüí∏ –í–∞—à –±–∞–ª–∞–Ω—Å: {info[3]} ‚ÇΩ, –º–µ–Ω—å—à–µ —á–µ–º –Ω—É–∂–Ω–æ!')
    else:
        await bot.send_message(call.from_user.id, f'<b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –±–µ–∑ +\n–õ–∏–±–æ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã</b>\n–ü—Ä–∏–º–µ—Ä: <i>79042345678</i>')
        await statess.Vivod.q1.set()

@dp.message_handler(state=statess.Vivod.q1)
async def spammers(message: types.Message,state:FSMContext):
    with sqlite3.connect(bd) as c:
        info = c.execute(f'SELECT * FROM mamonts_casino WHERE id = {message.from_user.id}').fetchone()
        ref = c.execute('SELECT * FROM mamonts_casino WHERE id = ?',(message.from_user.id,)).fetchone()
        worker = c.execute('SELECT * FROM workers WHERE ref_code = ?',(ref[2],)).fetchone()
    loh = InlineKeyboardMarkup(
        inline_keyboard = [
            [
                InlineKeyboardButton(text='‚úÖ', callback_data=f'gobalanc,{message.from_user.id},casino'),
                InlineKeyboardButton(text='‚ùå', callback_data=f'netbalanc,{message.from_user.id},{info[3]},casino')
            ]
        ]
    )       
    if message.text.isdigit():
        if int(message.text) == worker[2]:
            await message.answer(f'üí∏ –ó–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥ —Å–æ–∑–¥–∞–Ω–∞\n„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è\n\n–ù–æ–º–µ—Ä: <b>{message.text}</b>\n–°—É–º–º–∞: <b>{ref[3]}</b>\n\n„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è\n–ú—ã –æ–ø–æ–≤–µ—Å—Ç–∏–º –≤–∞—Å, –∫–æ–≥–¥–∞ –∑–∞—è–≤–∫–∞ –±—É–¥–µ—Ç –≤—ã–ø–ª–∞—á–µ–Ω–∞')
            await workerbot.send_message(worker[0], f'<b>üåê –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤!</b> (–ö–∞–∑–∏–Ω–æ)\n\nüêò –ú–∞–º–æ–Ω—Ç: <b>{message.from_user.first_name}</b>\nüí∏ –°—É–º–º–∞: <b>{ref[3]}</b> RUB\nüí≥ –†–µ–∫–≤–∏–∑–∏—Ç—ã: <b>{message.text}</b>', reply_markup=loh)
            with sqlite3.connect(bd) as c:
                c.execute("UPDATE mamonts_casino SET balance = 0 WHERE id = ?", (message.from_user.id,))
            await state.finish()
        elif int(message.text) == worker[7]:
            await message.answer(f'üí∏ –ó–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥ —Å–æ–∑–¥–∞–Ω–∞\n„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è\n\n–ù–æ–º–µ—Ä: <b>{message.text}</b>\n–°—É–º–º–∞: <b>{ref[3]}</b>\n\n„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è\n–ú—ã –æ–ø–æ–≤–µ—Å—Ç–∏–º –≤–∞—Å, –∫–æ–≥–¥–∞ –∑–∞—è–≤–∫–∞ –±—É–¥–µ—Ç –≤—ã–ø–ª–∞—á–µ–Ω–∞')
            await workerbot.send_message(worker[0], f'<b>üåê –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤!</b> (–ö–∞–∑–∏–Ω–æ)\n\nüêò –ú–∞–º–æ–Ω—Ç: <b>{message.from_user.first_name}</b>\nüí∏ –°—É–º–º–∞: <b>{ref[3]}</b> RUB\nüí≥ –†–µ–∫–≤–∏–∑–∏—Ç—ã: <b>{message.text}</b>', reply_markup=loh)
            with sqlite3.connect(bd) as c:
                c.execute("UPDATE mamonts_casino SET balance = 0 WHERE id = ?", (message.from_user.id,)) 
            await state.finish()
        else:
            await message.answer(f'<b>üëÆ‚Äç‚ôÇ –í—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã —Å –∫–æ—Ç–æ—Ä—ã—Ö –ù–ï –ø–æ–ø–æ–ª–Ω—è–ª–∏\nüëÆ‚Äç‚ôÇ –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É</b>')
            await workerbot.send_message(worker[0], f'–ú–∞–º–æ–Ω—Ç: <b>{message.from_user.first_name} (–ö–∞–∑–∏–Ω–æ)</b> –ø—ã—Ç–∞–ª—Å—è –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã: <b>{message.text}</b>')
    else:
        await message.answer("—ç—Ç–æ —Ä–∞–∑–≤–µ –Ω–æ–º–µ—Ä?")
    await state.finish()

@dp.message_handler(text='–ß–∏—Å–ª–∞ üî¢')
async def random_number_btn(message: types.Message):
    with sqlite3.connect(bd) as c:
        info = c.execute(f'SELECT * FROM mamonts_casino WHERE id = {message.from_user.id}').fetchone()
    if info[3] < 10:
        await message.answer('‚ùå –ù–∞ –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ ‚ùå\n\n–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ - 10 ‚ÇΩ')
    else:
        await message.answer(f'üíÅüèª‚Äç‚ôÄ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {info[3]}')
        await statess.RandomNumber.q1.set()

@dp.message_handler(state=statess.RandomNumber.q1)
async def random_number_sum(message: types.Message, state: FSMContext):
    with sqlite3.connect(bd) as c:
        info = c.execute(f'SELECT * FROM mamonts_casino WHERE id = {message.from_user.id}').fetchone()
    try:
        if info[3] < int(message.text) or int(message.text) < 10:
            await message.answer(f'–°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.\n\n–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ - 10 ‚ÇΩ \n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ - {info[3]}')
        else:
            await message.answer('üíÅüèª‚Äç‚ôÄ –°—Ç–∞–≤–∫–∞ –∑–∞—Å—á–∏—Ç–∞–Ω–∞, –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ, –≤—ã–±–µ—Ä–∏—Ç–µ –µ–≥–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª', reply_markup=menu.interval(message.text))
            await state.finish()
    except ValueError:
        await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=menu.mainkb)
        await state.finish()

@dp.callback_query_handler(text_startswith="RandomNumberr")
async def process_callback_button1(call: types.CallbackQuery):
    await bot.delete_message(chat_id=call.from_user.id, message_id=call.message.message_id)
    amount,vibor = call.data.split(",")[1],call.data.split(",")[2]
    with sqlite3.connect(bd) as c:
        info = c.execute(f'SELECT * FROM mamonts_casino WHERE id = {call.from_user.id}').fetchone()
    if vibor == 'biggest':
        if info[5] == 100:
            await call.message.answer(f"‚ù§ –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –≤—ã–∏–≥—Ä–∞–ª–∞ - –≤—ã–∏–≥—Ä—ã—à {amount}\n–í—ã–ø–∞–≤—à–µ–µ —á–∏—Å–ª–æ {random.randint(51, 100)}")
            with sqlite3.connect(bd) as c:
                c.execute("UPDATE mamonts_casino SET balance = balance + ?, wins = wins + 1, games = games + 1 WHERE id = ?",(amount, call.from_user.id,))
            await call.message.answer(f'üíÅüèª‚Äç‚ôÄ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {info[3] + int(amount)}')
            await statess.RandomNumber.q1.set()
        elif info[5] == 50:
            result = random.randint(1, 2)
            if result == 1:
                await call.message.answer(f"‚ù§ –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –≤—ã–∏–≥—Ä–∞–ª–∞ - –≤—ã–∏–≥—Ä—ã—à {amount}\n–í—ã–ø–∞–≤—à–µ–µ —á–∏—Å–ª–æ {random.randint(51, 100)}")
                with sqlite3.connect(bd) as c:
                    c.execute("UPDATE mamonts_casino SET balance = balance + ?, wins = wins + 1, games = games + 1 WHERE id = ?",(amount, call.from_user.id,))
                await call.message.answer(f'üíÅüèª‚Äç‚ôÄ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {info[3] + int(amount)}')
                await statess.RandomNumber.q1.set()
            else:
                await call.message.answer(f"üíî –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –ø—Ä–æ–∏–≥—Ä–∞–ª–∞ - –ø—Ä–æ–∏–≥—Ä—ã—à {amount}\n–í—ã–ø–∞–≤—à–µ–µ —á–∏—Å–ª–æ {random.randint(1, 49)}")
                with sqlite3.connect(bd) as c:
                    c.execute("UPDATE mamonts_casino SET balance = balance - ?, lose = lose + 1, games = games + 1 WHERE id = ?",(amount, call.from_user.id,))
                if info[3] <= 10:
                    await call.message.answer("‚ùå‚ùå –ù–∞ –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ ‚ùå‚ùå", reply_markup=menu.mainkb)
                else:
                    await call.message.answer(f'üíÅüèª‚Äç‚ôÄ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {info[3] - int(amount)}')
                    await statess.RandomNumber.q1.set()
        else:
            await call.message.answer(f"üíî –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –ø—Ä–æ–∏–≥—Ä–∞–ª–∞ - –ø—Ä–æ–∏–≥—Ä—ã—à {amount}\n–í—ã–ø–∞–≤—à–µ–µ —á–∏—Å–ª–æ {random.randint(1, 49)}")
            with sqlite3.connect(bd) as c:
                    c.execute("UPDATE mamonts_casino SET balance = balance - ?, lose = lose + 1, games = games + 1 WHERE id = ?",(amount, call.from_user.id,))
            if info[3] <= 10:
                await call.message.answer("‚ùå‚ùå –ù–∞ –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ ‚ùå‚ùå", reply_markup=menu.mainkb)
            else:
                await call.message.answer(f'üíÅüèª‚Äç‚ôÄ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {info[3] - int(amount)}')
                await statess.RandomNumber.q1.set()
    elif vibor == 'equals':
        if info[5] == 100:
            await call.message.answer(f"‚ù§ –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –≤—ã–∏–≥—Ä–∞–ª–∞ - –≤—ã–∏–≥—Ä—ã—à {int(amount) * 10}\n–í—ã–ø–∞–≤—à–µ–µ —á–∏—Å–ª–æ 50")
            with sqlite3.connect(bd) as c:
                c.execute("UPDATE mamonts_casino SET balance = balance + ? * 10, wins = wins + 1, games = games + 1 WHERE id = ?",(amount, call.from_user.id,))
            await call.message.answer(f'üíÅüèª‚Äç‚ôÄ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {info[3] + int(amount) * 10}')
            await statess.RandomNumber.q1.set()
        elif info[5] == 50:
            result = random.randint(1, 2)
            if result == 1:
                await call.message.answer(f"‚ù§ –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –≤—ã–∏–≥—Ä–∞–ª–∞ - –≤—ã–∏–≥—Ä—ã—à {int(amount) * 10}\n–í—ã–ø–∞–≤—à–µ–µ —á–∏—Å–ª–æ 50")
                with sqlite3.connect(bd) as c:
                    c.execute("UPDATE mamonts_casino SET balance = balance + ? * 10, wins = wins + 1, games = games + 1 WHERE id = ?",(amount, call.from_user.id,))
                await call.message.answer(f'üíÅüèª‚Äç‚ôÄ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {info[3] + int(amount) * 10}')
                await statess.RandomNumber.q1.set()
            else:
                await call.message.answer(f"üíî –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –ø—Ä–æ–∏–≥—Ä–∞–ª–∞ - –ø—Ä–æ–∏–≥—Ä—ã—à {amount}\n–í—ã–ø–∞–≤—à–µ–µ —á–∏—Å–ª–æ {random.randint(1, 100)}")
                with sqlite3.connect(bd) as c:
                    c.execute("UPDATE mamonts_casino SET balance = balance - ?, lose = lose + 1, games = games + 1 WHERE id = ?",(amount, call.from_user.id,))
                if info[3] <= 10:
                    await call.message.answer("‚ùå‚ùå –ù–∞ –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ ‚ùå‚ùå", reply_markup=menu.mainkb)
                else:
                    await call.message.answer(f'üíÅüèª‚Äç‚ôÄ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {info[3] - int(amount)}')
                    await statess.RandomNumber.q1.set()
        else:
            await call.message.answer(f"üíî –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –ø—Ä–æ–∏–≥—Ä–∞–ª–∞ - –ø—Ä–æ–∏–≥—Ä—ã—à {amount}\n–í—ã–ø–∞–≤—à–µ–µ —á–∏—Å–ª–æ {random.randint(1, 49)}")
            with sqlite3.connect(bd) as c:
                    c.execute("UPDATE mamonts_casino SET balance = balance - ?, lose = lose + 1, games = games + 1 WHERE id = ?",(amount, call.from_user.id,))
            if info[3] <= 10:
                await call.message.answer("‚ùå‚ùå –ù–∞ –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ ‚ùå‚ùå", reply_markup=menu.mainkb)
            else:
                await call.message.answer(f'üíÅüèª‚Äç‚ôÄ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {info[3] - int(amount)}')
                await statess.RandomNumber.q1.set()
    else:
        if info[5] == 100:
            await call.message.answer(f"‚ù§ –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –≤—ã–∏–≥—Ä–∞–ª–∞ - –≤—ã–∏–≥—Ä—ã—à {amount}\n–í—ã–ø–∞–≤—à–µ–µ —á–∏—Å–ª–æ {random.randint(1, 49)}")
            with sqlite3.connect(bd) as c:
                c.execute("UPDATE mamonts_casino SET balance = balance + ?, wins = wins + 1, games = games + 1 WHERE id = ?",(amount, call.from_user.id,))
            await call.message.answer(f'üíÅüèª‚Äç‚ôÄ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {info[3] + int(amount)}')
            await statess.RandomNumber.q1.set()
        elif info[5] == 50:
            result = random.randint(1, 2)
            if result == 1:
                await call.message.answer(f"‚ù§ –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –≤—ã–∏–≥—Ä–∞–ª–∞ - –≤—ã–∏–≥—Ä—ã—à {amount}\n–í—ã–ø–∞–≤—à–µ–µ —á–∏—Å–ª–æ {random.randint(1, 49)}")
                with sqlite3.connect(bd) as c:
                    c.execute("UPDATE mamonts_casino SET balance = balance + ?, wins = wins + 1, games = games + 1 WHERE id = ?",(amount, call.from_user.id,))
                await call.message.answer(f'üíÅüèª‚Äç‚ôÄ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {info[3] + int(amount)}')
                await statess.RandomNumber.q1.set()
            else:
                await call.message.answer(f"üíî –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –ø—Ä–æ–∏–≥—Ä–∞–ª–∞ - –ø—Ä–æ–∏–≥—Ä—ã—à {amount}\n–í—ã–ø–∞–≤—à–µ–µ —á–∏—Å–ª–æ {random.randint(51, 100)}")
                with sqlite3.connect(bd) as c:
                    c.execute("UPDATE mamonts_casino SET balance = balance - ?, lose = lose + 1, games = games + 1 WHERE id = ?",(amount, call.from_user.id,))
                if info[3] <= 10:
                    await call.message.answer("‚ùå‚ùå –ù–∞ –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ ‚ùå‚ùå", reply_markup=menu.mainkb)
                else:
                    await call.message.answer(f'üíÅüèª‚Äç‚ôÄ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {info[3] - int(amount)}')
                    await statess.RandomNumber.q1.set()
        else:
            await call.message.answer(f"üíî –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –ø—Ä–æ–∏–≥—Ä–∞–ª–∞ - –ø—Ä–æ–∏–≥—Ä—ã—à {amount}\n–í—ã–ø–∞–≤—à–µ–µ —á–∏—Å–ª–æ {random.randint(51, 100)}")
            with sqlite3.connect(bd) as c:
                    c.execute("UPDATE mamonts_casino SET balance = balance - ?, lose = lose + 1, games = games + 1 WHERE id = ?",(amount, call.from_user.id,))
            if info[3] <= 10:
                await call.message.answer("‚ùå‚ùå –ù–∞ –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ ‚ùå‚ùå", reply_markup=menu.mainkb)
            else:
                await call.message.answer(f'üíÅüèª‚Äç‚ôÄ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {info[3] - int(amount)}')
                await statess.RandomNumber.q1.set()
    if info[3] >= 50000:
        with sqlite3.connect(bd) as c:
            c.execute("UPDATE mamonts_casino SET shans = ? WHERE id = ?",('0', call.from_user.id,))

@dp.message_handler(text="–û—Ä—ë–ª & –†–µ—à–∫–∞")
async def heads_or_tails_btn(message: types.Message):
    with sqlite3.connect(bd) as c:
        info = c.execute(f'SELECT * FROM mamonts_casino WHERE id = {message.from_user.id}').fetchone()
    if info[3] < 10:
        await message.answer("‚ùå –ù–∞ –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ ‚ùå\n\n–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ - 10 ‚ÇΩ")
    else:
        await message.answer(f"üíÅüèª‚Äç‚ôÄ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {info[3]}")
        await statess.Coin.q1.set()

@dp.message_handler(state=statess.Coin.q1)
async def heads_or_tails_sum(message: types.Message, state: FSMContext):
    with sqlite3.connect(bd) as c:
        info = c.execute(f'SELECT * FROM mamonts_casino WHERE id = {message.from_user.id}').fetchone()
    try:
        if int(message.text) < 10 or int(message.text) > info[3]:
            await message.answer(f"–°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.\n–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ - 10 ‚ÇΩ\n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ - {info[3]} ‚ÇΩ")
        else:
            await message.answer("üíÅüèª‚Äç‚ôÄ –°—Ç–∞–≤–∫–∞ –∑–∞—Å—á–∏—Ç–∞–Ω–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∞ –∫–æ–≥–æ –ø–æ—Å—Ç–∞–≤–∏—Ç–µ",reply_markup=menu.coin(message.text))
            await state.finish()
    except ValueError:
        await message.answer("–í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ!\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É –∑–∞–Ω–æ–≤–æ –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞–∑–∞–¥")
        await state.finish()

@dp.callback_query_handler(text_startswith="Coinflip")
async def heads_btn(call: types.CallbackQuery):
    await bot.delete_message(chat_id=call.from_user.id, message_id=call.message.message_id)
    amount,vibor = call.data.split(",")[1],call.data.split(",")[2]
    with sqlite3.connect(bd) as c:
        info = c.execute(f'SELECT * FROM mamonts_casino WHERE id = {call.from_user.id}').fetchone()
    if vibor == 'Orel':
        if info[5] == 100:
            await call.message.answer(f"‚ù§ –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –≤—ã–∏–≥—Ä–∞–ª–∞ - –≤—ã–∏–≥—Ä—ã—à {amount}\n–í—ã–ø–∞–ª –æ—Ä–µ–ª!")
            with sqlite3.connect(bd) as c:
                c.execute("UPDATE mamonts_casino SET balance = balance + ?, wins = wins + 1, games = games + 1 WHERE id = ?",(amount, call.from_user.id,))
            await call.message.answer(f'üíÅüèª‚Äç‚ôÄ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {info[3] + int(amount)}')
            await statess.Coin.q1.set()
        elif info[5] == 50:
            result = random.randint(1, 2)
            if result == 1:
                await call.message.answer(f"‚ù§ –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –≤—ã–∏–≥—Ä–∞–ª–∞ - –≤—ã–∏–≥—Ä—ã—à {amount}\n–í—ã–ø–∞–ª –æ—Ä–µ–ª")
                with sqlite3.connect(bd) as c:
                    c.execute("UPDATE mamonts_casino SET balance = balance + ?, wins = wins + 1, games = games + 1 WHERE id = ?",(amount, call.from_user.id,))
                await call.message.answer(f'üíÅüèª‚Äç‚ôÄ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {info[3] + int(amount)}')
                await statess.Coin.q1.set()

            else:
                await call.message.answer(f"üíî –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –ø—Ä–æ–∏–≥—Ä–∞–ª–∞ - –ø—Ä–æ–∏–≥—Ä—ã—à {amount}\n–í—ã–ø–∞–ª–∞ —Ä–µ—à–∫–∞")
                with sqlite3.connect(bd) as c:
                    c.execute("UPDATE mamonts_casino SET balance = balance - ?, lose = lose + 1, games = games + 1 WHERE id = ?",(amount, call.from_user.id,))
                if info[3] <= 10:                 
                    await call.message.answer("‚ùå‚ùå –ù–∞ –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ ‚ùå‚ùå", reply_markup=menu.mainkb)
                else:
                    await call.message.answer(f'üíÅüèª‚Äç‚ôÄ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {info[3] - int(amount)}')
                    await statess.Coin.q1.set()
        else:
            await call.message.answer(f"üíî –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –ø—Ä–æ–∏–≥—Ä–∞–ª–∞ - –ø—Ä–æ–∏–≥—Ä—ã—à {amount}\n–í—ã–ø–∞–ª–∞ —Ä–µ—à–∫–∞")
            with sqlite3.connect(bd) as c:
                    c.execute("UPDATE mamonts_casino SET balance = balance - ?, lose = lose + 1, games = games + 1 WHERE id = ?",(amount, call.from_user.id,))
            if info[3] <= 10:
                await call.message.answer("‚ùå‚ùå –ù–∞ –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ ‚ùå‚ùå", reply_markup=menu.mainkb)
            else:
                await call.message.answer(f'üíÅüèª‚Äç‚ôÄ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {info[3] - int(amount)}')
                await statess.Coin.q1.set()
    else:
        if info[5] == 100:
            await call.message.answer(f"‚ù§ –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –≤—ã–∏–≥—Ä–∞–ª–∞ - –≤—ã–∏–≥—Ä—ã—à {amount}\n–í—ã–ø–∞–ª–∞ —Ä–µ—à–∫–∞!")
            with sqlite3.connect(bd) as c:
                    c.execute("UPDATE mamonts_casino SET balance = balance + ?, wins = wins + 1, games = games + 1 WHERE id = ?",(amount, call.from_user.id,))
            await call.message.answer(f'üíÅüèª‚Äç‚ôÄ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {info[3] + int(amount)}')
            await statess.Coin.q1.set()
        elif info[5] == 50:
            result = random.randint(1, 2)
            if result == 1:
                await call.message.answer(f"‚ù§ –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –≤—ã–∏–≥—Ä–∞–ª–∞ - –≤—ã–∏–≥—Ä—ã—à {amount}\n–í—ã–ø–∞–ª–∞ —Ä–µ—à–∫–∞!")
                with sqlite3.connect(bd) as c:
                    c.execute("UPDATE mamonts_casino SET balance = balance + ?, wins = wins + 1, games = games + 1 WHERE id = ?",(amount, call.from_user.id,))
                await call.message.answer(f'üíÅüèª‚Äç‚ôÄ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {info[3] + int(amount)}')
                await statess.Coin.q1.set()
            else:
                await call.message.answer(f"üíî –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –ø—Ä–æ–∏–≥—Ä–∞–ª–∞ - –ø—Ä–æ–∏–≥—Ä—ã—à {amount}\n–í—ã–ø–∞–ª –æ—Ä–µ–ª!")
                with sqlite3.connect(bd) as c:
                    c.execute("UPDATE mamonts_casino SET balance = balance - ?, lose = lose + 1, games = games + 1 WHERE id = ?",(amount, call.from_user.id,))
                if info[3] <= 10:
                    await call.message.answer("‚ùå‚ùå –ù–∞ –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ ‚ùå‚ùå", reply_markup=menu.mainkb)
                else:
                    await call.message.answer(f'üíÅüèª‚Äç‚ôÄ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {info[3] - int(amount)}')
                    await statess.Coin.q1.set()
        else:
            await call.message.answer(f"üíî –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –ø—Ä–æ–∏–≥—Ä–∞–ª–∞ - –ø—Ä–æ–∏–≥—Ä—ã—à {amount}\n–í—ã–ø–∞–ª –æ—Ä–µ–ª")
            with sqlite3.connect(bd) as c:
                c.execute("UPDATE mamonts_casino SET balance = balance - ?, lose = lose + 1, games = games + 1 WHERE id = ?",(amount, call.from_user.id,))
            if info[3] <= 10:
                await call.message.answer("‚ùå‚ùå –ù–∞ –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ ‚ùå‚ùå", reply_markup=menu.mainkb)
            else:
                await call.message.answer(f'üíÅüèª‚Äç‚ôÄ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {info[3] - int(amount)}')
                await statess.Coin.q1.set()
    if info[3] >= 50000:
        with sqlite3.connect(bd) as c:
            c.execute("UPDATE mamonts_casino SET shans = ? WHERE id = ?",('0', call.from_user.id,))

@dp.message_handler(text="–ö–æ—Å—Ç–∏ üé≤")
async def random_dice_btn(message: types.Message):
    with sqlite3.connect(bd) as c:
        info = c.execute(f'SELECT * FROM mamonts_casino WHERE id = {message.from_user.id}').fetchone()
    if info[3] < 10:
        await message.answer("‚ùå –ù–∞ –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ ‚ùå\n\n–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ - 10 ‚ÇΩ")
    else:
        await message.answer("üíÅüèª‚Äç‚ôÄ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏ \n")
    await statess.Dice.q1.set()

@dp.message_handler(state=statess.Dice.q1)
async def random_dice_sum(message: types.Message, state: FSMContext):
    with sqlite3.connect(bd) as c:
        info = c.execute(f'SELECT * FROM mamonts_casino WHERE id = {message.from_user.id}').fetchone()
    try:
        if int(message.text) < 10 or int(message.text) > info[3]:
            await message.answer(f"–°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.\n–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ - 10 ‚ÇΩ\n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ - {info[3]} ‚ÇΩ")
        else:
            await message.answer("üíÅüèª‚Äç‚ôÄ –°—Ç–∞–≤–∫–∞ –∑–∞—Å—á–∏—Ç–∞–Ω–∞")
            one_point = "CAACAgIAAxkBAAEOWYJhkPT2ojKkslnxy1rH-8xS3rcPuAAC3MYBAAFji0YMsbUSFEouGv8iBA"
            two_point = "CAACAgIAAxkBAAEOKxRhiFE5JfReRO6gZlItEuZKcTw4FwAC3cYBAAFji0YM608pO-wjAlEiBA"
            three_point = "CAACAgIAAxkBAAEOY6BhkpmmVkdpWR2bP0bFelAmIQ5yOQAC3sYBAAFji0YMVHH9hav7ILkiBA"
            four_point = "CAACAgIAAxkBAAEOY6Jhkpm-7_ZhXS5rPlNH9N9AfTIzbgAC38YBAAFji0YMHEUTINW7YxciBA"
            five_point = "CAACAgIAAxkBAAEOY6RhkpnUEJFca6ISof5GiwtYh_O-JwAC4MYBAAFji0YMSLHz-sj_JqkiBA"
            six_point = "CAACAgIAAxkBAAEOY6Zhkpnut8ZgPcI3nPC3auNQZVYWOAAC4cYBAAFji0YM75p8zae_tHoiBA"
            if info[5] == 100:
                await bot.send_sticker(message.from_user.id, random.choice([four_point, five_point, six_point]))
                await message.answer("‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ \n"
                                     "  üëÜ –í–∞—à –∫—É–±–∏–∫ \n"
                                     "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ \n"
                                     "  üëá –ö—É–±–∏–∫ –±–æ—Ç–∞ \n"
                                     "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ")
                await bot.send_sticker(message.from_user.id, random.choice([one_point, two_point, three_point]))
                await message.answer(f"‚ù§ –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –≤—ã–∏–≥—Ä–∞–ª–∞ - –≤—ã–∏–≥—Ä—ã—à {int(message.text)} \n")
                with sqlite3.connect(bd) as c:
                    c.execute("UPDATE mamonts_casino SET balance = balance + ?, wins = wins + 1, games = games + 1 WHERE id = ?",(message.text, message.from_user.id,))
                await message.answer(f'üíÅüèª‚Äç‚ôÄ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {info[3] + int(message.text)}')
                await statess.Dice.q1.set()
            elif info[5] == 50:
                result = random.randint(1,2)
                if result == 1:
                    await bot.send_sticker(message.from_user.id, random.choice([four_point, five_point, six_point]))
                    await message.answer("‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ \n"
                                         "  üëÜ –í–∞—à –∫—É–±–∏–∫ \n"
                                         "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ \n"
                                         "  üëá –ö—É–±–∏–∫ –±–æ—Ç–∞ \n"
                                         "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ")
                    await bot.send_sticker(message.from_user.id, random.choice([one_point, two_point, three_point]))
                    await message.answer(f"‚ù§ –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –≤—ã–∏–≥—Ä–∞–ª–∞ - –≤—ã–∏–≥—Ä—ã—à {int(message.text)} \n")
                    with sqlite3.connect(bd) as c:
                        c.execute("UPDATE mamonts_casino SET balance = balance + ?, wins = wins + 1, games = games + 1 WHERE id = ?",(message.text, message.from_user.id,))
                    await message.answer(f'üíÅüèª‚Äç‚ôÄ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {info[3] + int(message.text)}')
                    await statess.Dice.q1.set()
                else:
                    await bot.send_sticker(message.from_user.id, random.choice([one_point, two_point, three_point]))
                    await message.answer("‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ \n"
                                         "  üëÜ –í–∞—à –∫—É–±–∏–∫ \n"
                                         "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ \n"
                                         "  üëá –ö—É–±–∏–∫ –±–æ—Ç–∞ \n"
                                         "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ")
                    await bot.send_sticker(message.from_user.id, random.choice([four_point, five_point, six_point]))
                    await message.answer(f"üíî –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –ø—Ä–æ–∏–≥—Ä–∞–ª–∞ - –ø—Ä–æ–∏–≥—Ä—ã—à {int(message.text)} \n")
                    with sqlite3.connect(bd) as c:
                        c.execute("UPDATE mamonts_casino SET balance = balance - ?, lose = lose + 1, games = games + 1 WHERE id = ?",(message.text, message.from_user.id,))
                    if info[3] <= 10:
                        await message.answer("‚ùå‚ùå –ù–∞ –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ ‚ùå‚ùå", reply_markup=menu.mainkb)
                        await state.finish()
                    else:
                        await message.answer(f'üíÅüèª‚Äç‚ôÄ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {info[3] - int(message.text)}')
                        await statess.Dice.q1.set()
            else:
                await bot.send_sticker(message.from_user.id, random.choice([one_point, two_point, three_point]))
                await message.answer("‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ \n"
                                     "  üëÜ –í–∞—à –∫—É–±–∏–∫ \n"
                                     "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ \n"
                                     "  üëá –ö—É–±–∏–∫ –±–æ—Ç–∞ \n"
                                     "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ")
                await bot.send_sticker(message.from_user.id, random.choice([four_point, five_point, six_point]))
                await message.answer(f"üíî –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –ø—Ä–æ–∏–≥—Ä–∞–ª–∞ - –ø—Ä–æ–∏–≥—Ä—ã—à {int(message.text)} \n")
                with sqlite3.connect(bd) as c:
                    c.execute("UPDATE mamonts_casino SET balance = balance - ?, lose = lose + 1, games = games + 1 WHERE id = ?",(message.text, message.from_user.id,))
                if info[3] <= 10:
                    await message.answer("‚ùå‚ùå –ù–∞ –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ ‚ùå‚ùå", reply_markup=menu.mainkb)
                    await state.finish()
                else:
                    await message.answer(f'üíÅüèª‚Äç‚ôÄ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {info[3] - int(message.text)}')
                    await statess.Dice.q1.set()
            if info[3] >= 50000:
                with sqlite3.connect(bd) as c:
                    c.execute("UPDATE mamonts_casino SET shans = shans + ? WHERE id = ?",('0', message.from_user.id,))
    except ValueError:
        await message.answer("–í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ!\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É –∑–∞–Ω–æ–≤–æ –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞–∑–∞–¥")
        await state.finish()

@dp.callback_query_handler(text_startswith="otmenilsuka",state="*") 
async def otmenaasuchka(call:types.CallbackQuery,state:FSMContext):
    await state.finish()
    await bot.delete_message(chat_id=call.from_user.id, message_id=call.message.message_id)
    await bot.send_message(call.from_user.id,'–û—Ç–º–µ–Ω–µ–Ω–Ω–æ') 

executor.start_polling(dp)